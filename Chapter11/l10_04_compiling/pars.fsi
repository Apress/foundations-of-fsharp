// Signature file for parser generated by fsyacc 
type token = 
  | LPAREN
  | RPAREN
  | EOF
  | MULTI
  | DIV
  | PLUS
  | MINUS
  | FLOAT of (System.Double)
  | ID of (string)
val Expression : (Microsoft.FSharp.Tools.FsLex.LexBuffer<'a,'cty> -> token) -> Microsoft.FSharp.Tools.FsLex.LexBuffer<'a,'cty> -> ( Strangelights.ExpressionParser.Ast.Expr ) 
val token_to_string: token -> string
